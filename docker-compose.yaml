services:
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    networks:
      - mongo-net
    ports:
      - '27017:27017'
    healthcheck:
      test: ['CMD', 'mongosh', '--quiet', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '90MB'
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      - server-net
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '25MB'
  server1: &server
    build:
      context: .
      dockerfile: ./server/Dockerfile
    restart: always
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - REDIS_URL=redis://redis:6379
      - PAYMENT_PROCESSOR_URL_DEFAULT=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_URL_FALLBACK=http://payment-processor-fallback:8080
    networks:
      - server-net
      - mongo-net
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '90MB'
    depends_on:
      - redis
      - mongo
  server2:
    <<: *server
  worker:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    restart: always
    environment:
      - REDIS_URL=redis://redis:6379
    networks:
      - server-net
      - mongo-net
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '40MB'
    depends_on:
      - redis
      - mongo
      - server1
      - server2
  nginx:
    image: nginx:alpine
    container_name: loadbalancer
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 9999:80
    networks:
      - server-net
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '15MB'
    depends_on:
      - server1
      - server2
networks:
  server-net:
    driver: bridge
  mongo-net:
    driver: bridge
  payment-processor:
    external: true
